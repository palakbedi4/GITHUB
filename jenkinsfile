pipeline {
    agent any
    environment {
        RECIPIENT_EMAIL = 'palakbedi2004@gmail.com'  // Email to receive notifications
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Create build log and capture output
                    sh "echo 'Building code using Maven...' | tee build_logs.txt"
                }
            }
            post {
                always {
                    // Archive the build log file and send it via email
                    archiveArtifacts artifacts: 'build_logs.txt', allowEmptyArchive: true
                    script {
                        mail to: "${RECIPIENT_EMAIL}",
                            subject: "Build Stage ${currentBuild.result}: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                            body: "The Build stage has ${currentBuild.result}. Please check the logs attached.",
                            attachmentsPattern: 'build_logs.txt'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Create test log and capture output
                    sh "echo 'Running unit tests with TestNG...' | tee test_logs.txt"
                }
            }
            post {
                always {
                    // Archive the test log file and send it via email
                    archiveArtifacts artifacts: 'test_logs.txt', allowEmptyArchive: true
                    script {
                        mail to: "${RECIPIENT_EMAIL}",
                            subject: "Test Stage ${currentBuild.result}: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                            body: "The Test stage has ${currentBuild.result}. Please check the logs attached.",
                            attachmentsPattern: 'test_logs.txt'
                    }
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    // Create security scan log and capture output
                    sh "echo 'Simulating security scan...' | tee security_scan_logs.txt"
                }
            }
            post {
                always {
                    // Archive the security scan log file and send it via email
                    archiveArtifacts artifacts: 'security_scan_logs.txt', allowEmptyArchive: true
                    script {
                        mail to: "${RECIPIENT_EMAIL}",
                            subject: "Security Scan Stage ${currentBuild.result}: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                            body: "The Security Scan stage has ${currentBuild.result}. Please check the logs attached.",
                            attachmentsPattern: 'security_scan_logs.txt'
                    }
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    // Create deploy log and capture output
                    sh "echo 'Deploying to staging environment...' | tee deploy_logs.txt"
                }
            }
            post {
                always {
                    // Archive the deploy log file and send it via email
                    archiveArtifacts artifacts: 'deploy_logs.txt', allowEmptyArchive: true
                    script {
                        mail to: "${RECIPIENT_EMAIL}",
                            subject: "Deploy Stage ${currentBuild.result}: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                            body: "The Deploy stage has ${currentBuild.result}. Please check the logs attached.",
                            attachmentsPattern: 'deploy_logs.txt'
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline completed."
        }
    }
}
